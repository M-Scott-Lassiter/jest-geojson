// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Error Snapshot Testing. Throws error: At least one geometry when no argument provided to MinCount 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).not.toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

Expected input to not be a valid GeoJSON GeometryCollection object with at least 1 geometry object.

Received:  [31m{\\"geometries\\": [{\\"coordinates\\": [100, 0], \\"type\\": \\"Point\\"}, {\\"coordinates\\": [[101, 0], [102, 1]], \\"type\\": \\"LineString\\"}, {\\"coordinates\\": [[[102, 2], [103, 2], [103, 3], [102, 3], [102, 2]]], \\"type\\": \\"Polygon\\"}, {\\"coordinates\\": [150, 73], \\"type\\": \\"Point\\"}], \\"type\\": \\"GeometryCollection\\"}[39m"
`;

exports[`Error Snapshot Testing. Throws error: Invalid input to matcher 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

Must have a type property with value 'GeometryCollection'.

Received:  [31mfalse[39m"
`;

exports[`Error Snapshot Testing. Throws error: MinCount is negative 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

MinCount must be greater than 0. Provided: [32m-1[39m

Received:  [31m{\\"geometries\\": [{\\"coordinates\\": [100, 0], \\"type\\": \\"Point\\"}, {\\"coordinates\\": [[101, 0], [102, 1]], \\"type\\": \\"LineString\\"}, {\\"coordinates\\": [[[102, 2], [103, 2], [103, 3], [102, 3], [102, 2]]], \\"type\\": \\"Polygon\\"}, {\\"coordinates\\": [150, 73], \\"type\\": \\"Point\\"}], \\"type\\": \\"GeometryCollection\\"}[39m"
`;

exports[`Error Snapshot Testing. Throws error: MinCount must be a number 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

MinCount must be a number.

Received:  [31m{\\"geometries\\": [{\\"coordinates\\": [100, 0], \\"type\\": \\"Point\\"}, {\\"coordinates\\": [[101, 0], [102, 1]], \\"type\\": \\"LineString\\"}, {\\"coordinates\\": [[[102, 2], [103, 2], [103, 3], [102, 3], [102, 2]]], \\"type\\": \\"Polygon\\"}, {\\"coordinates\\": [150, 73], \\"type\\": \\"Point\\"}], \\"type\\": \\"GeometryCollection\\"}[39m"
`;

exports[`Error Snapshot Testing. Throws error: No objects in geometries 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

Expected at least one object in the \\"geometries\\" property.

Received:  [31m{\\"geometries\\": [], \\"type\\": \\"GeometryCollection\\"}[39m"
`;

exports[`Error Snapshot Testing. Throws error: Searching for wrong number of geometries 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

Geometries has count of [31m4[39m, expected at least [32m6[39m.

Received:  [31m{\\"geometries\\": [{\\"coordinates\\": [100, 0], \\"type\\": \\"Point\\"}, {\\"coordinates\\": [[101, 0], [102, 1]], \\"type\\": \\"LineString\\"}, {\\"coordinates\\": [[[102, 2], [103, 2], [103, 3], [102, 3], [102, 2]]], \\"type\\": \\"Polygon\\"}, {\\"coordinates\\": [150, 73], \\"type\\": \\"Point\\"}], \\"type\\": \\"GeometryCollection\\"}[39m"
`;

exports[`Error Snapshot Testing. Throws error: Valid use case passes 1`] = `
"[2mexpect([22m[31mGeometryObject[39m[2m).not.toHaveMinGeometryCount([22m[32mMinCount[39m[2m)[22m

Expected input to not be a valid GeoJSON GeometryCollection object with at least [32m2[39m geometry objects.

Received:  [31m{\\"geometries\\": [{\\"coordinates\\": [100, 0], \\"type\\": \\"Point\\"}, {\\"coordinates\\": [[101, 0], [102, 1]], \\"type\\": \\"LineString\\"}, {\\"coordinates\\": [[[102, 2], [103, 2], [103, 3], [102, 3], [102, 2]]], \\"type\\": \\"Polygon\\"}, {\\"coordinates\\": [150, 73], \\"type\\": \\"Point\\"}], \\"type\\": \\"GeometryCollection\\"}[39m"
`;
